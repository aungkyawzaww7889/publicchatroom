import{c as L,d as T,T as O,a as E,o as Y,q as $,b as A,w as H,g as F,e as N,f as R}from"./main-DrDSUmL4.js";import{t as g,n as v,g as I,m as C,a as y,e as U,b as z}from"./en-US-ZDjq8c4b.js";/* empty css                */function j(r,t){let e=r,a=t;const n=L(T,"chats");let o=null;const i=async f=>{const c=new Date,l={username:a,room:e,message:f,created_at:O.fromDate(c)};try{return await E(n,l)}catch(u){throw console.log("Error addchat = ",u),u}},s=f=>{o&&o(),o=Y($(n,H("room","==",e),A("created_at")),c=>{c.docChanges().forEach(l=>{l.type==="added"&&f(l.doc.data())})})},d=f=>{e=f,console.log(`Room changed to ${e}`)},m=f=>{a=f,localStorage.setItem("username",a),console.log(`Username changed to ${a}`)};return(()=>{let f=setInterval(async()=>{try{const c=await F(n);if(c.empty){console.log("No message to delete"),clearInterval(f);return}c.forEach(async l=>{await N(R(T,"chats",l.id))})}catch(c){console.error("Error deleting message : ",c)}},3e3)})(),{addChat:i,getChats:s,updateChatroom:d,updateUsername:m}}function x(r,t){const e=+g(r)-+g(t);return e<0?-1:e>0?1:e}function k(r,t,e){const[a,n]=v(e==null?void 0:e.in,r,t),o=a.getFullYear()-n.getFullYear(),i=a.getMonth()-n.getMonth();return o*12+i}function G(r){return t=>{const a=(r?Math[r]:Math.trunc)(t);return a===0?0:a}}function B(r,t){return+g(r)-+g(t)}function J(r,t){const e=g(r,t==null?void 0:t.in);return e.setHours(23,59,59,999),e}function K(r,t){const e=g(r,t==null?void 0:t.in),a=e.getMonth();return e.setFullYear(e.getFullYear(),a+1,0),e.setHours(23,59,59,999),e}function P(r,t){const e=g(r,t==null?void 0:t.in);return+J(e,t)==+K(e,t)}function Q(r,t,e){const[a,n,o]=v(e==null?void 0:e.in,r,r,t),i=x(n,o),s=Math.abs(k(n,o));if(s<1)return 0;n.getMonth()===1&&n.getDate()>27&&n.setDate(30),n.setMonth(n.getMonth()-i*s);let d=x(n,o)===-i;P(a)&&s===1&&x(a,o)===1&&(d=!1);const m=i*(s-+d);return m===0?0:m}function V(r,t,e){const a=B(r,t)/1e3;return G(e==null?void 0:e.roundingMethod)(a)}function W(r,t,e){const a=z(),n=(e==null?void 0:e.locale)??a.locale??U,o=2520,i=x(r,t);if(isNaN(i))throw new RangeError("Invalid time value");const s=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:i}),[d,m]=v(e==null?void 0:e.in,...i>0?[t,r]:[r,t]),h=V(m,d),f=(I(m)-I(d))/1e3,c=Math.round((h-f)/60);let l;if(c<2)return e!=null&&e.includeSeconds?h<5?n.formatDistance("lessThanXSeconds",5,s):h<10?n.formatDistance("lessThanXSeconds",10,s):h<20?n.formatDistance("lessThanXSeconds",20,s):h<40?n.formatDistance("halfAMinute",0,s):h<60?n.formatDistance("lessThanXMinutes",1,s):n.formatDistance("xMinutes",1,s):c===0?n.formatDistance("lessThanXMinutes",1,s):n.formatDistance("xMinutes",c,s);if(c<45)return n.formatDistance("xMinutes",c,s);if(c<90)return n.formatDistance("aboutXHours",1,s);if(c<C){const u=Math.round(c/60);return n.formatDistance("aboutXHours",u,s)}else{if(c<o)return n.formatDistance("xDays",1,s);if(c<y){const u=Math.round(c/C);return n.formatDistance("xDays",u,s)}else if(c<y*2)return l=Math.round(c/y),n.formatDistance("aboutXMonths",l,s)}if(l=Q(m,d),l<12){const u=Math.round(c/y);return n.formatDistance("xMonths",u,s)}else{const u=l%12,S=Math.trunc(l/12);return u<3?n.formatDistance("aboutXYears",S,s):u<9?n.formatDistance("overXYears",S,s):n.formatDistance("almostXYears",S+1,s)}}function Z(r){return{newli:a=>{const n=W(a.created_at.toDate(),new Date,{addSuffix:!0}),o=`
                <li class="shadow rounded-lg px-4 py-2">
                    <div class="flex justify-between">
                        <h5 class="text-gray-600 font-medium text-sm">${a.username}</h5>
                        <i class="text-gray-300 text-xs">${n}</i>
                    </div>
                    <p class="text-gray-600 text-sm">${a.message}</p>
                </li>`;r.innerHTML+=o},resetli:()=>{r.innerHTML=""}}}const p=document.querySelector(".chatrooms"),ee=document.querySelector(".chat-ul"),w=document.querySelector(".chat-form"),D=document.querySelector(".user-form"),_=document.querySelector(".msg"),X=document.querySelector(".roomtitle"),q=localStorage.username?localStorage.username:"Guest";D.username.placeholder=`username is ${q}`;const M=j("general",q);X.textContent="General";const b=Z(ee);w.addEventListener("submit",r=>{r.preventDefault();const t=w.message.value.trim();M.addChat(t).then(()=>w.reset()).catch(e=>console.log(e))});D.addEventListener("submit",r=>{r.preventDefault();const t=D.username.value.trim();M.updateUsername(t),D.reset(),_.innerText=`New name updated to ${t}`,D.username.placeholder=`username is ${t}`,setTimeout(()=>_.innerText=" ",3e3)});p.addEventListener("click",r=>{r.preventDefault();const t=r.target.closest("button");if(t){b.resetli();const e=t.getAttribute("id"),a=t.querySelector("h3").textContent;console.log(a),X.innerText=a,M.updateChatroom(e),M.getChats(n=>{b.newli(n)})}});M.getChats(r=>{b.newli(r)});
